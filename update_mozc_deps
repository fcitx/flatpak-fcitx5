#!/bin/bash

BASE=$PWD
pushd .
if [ ! -d mozc ]; then
    git clone --filter=tree:0 https://github.com/fcitx/mozc/
fi
[[ ! -d bcr ]] && git clone --filter=tree:0 https://github.com/bazelbuild/bazel-central-registry bcr
cd bcr
git fetch --all
cd ..

cd mozc/src/
git fetch --all
git checkout origin/fcitx
git restore .
git submodule update --init

set -e

# TMPDIR
[[ -z $TMPDIR ]] && TMPDIR=/tmp
[[ -e $TMPDIR ]] || mkdir -p $TMPDIR

_MOZC_BAZEL_CACHE=$TMPDIR/mozc_cache
_DOWNLOADER_CACHE=$TMPDIR/downloader_cache
BAZEL_MIRROR="$BASE/bazel_mirror.py"

rm -rf $_DOWNLOADER_CACHE
mkdir -p $_DOWNLOADER_CACHE
pushd .
cd $_DOWNLOADER_CACHE
python3 $BAZEL_MIRROR &
PROXY_PID=$!
popd
[[ -z $PROXY_PID ]] && exit 1
bazel clean --expunge
rm -rf $_MOZC_BAZEL_CACHE

BUILD_TARGET="unix/fcitx5:fcitx5-mozc.so server:mozc_server gui/tool:mozc_tool"
bazel build --nobuild --experimental_downloader_config=$BASE/downloader.cfg --registry=file:///$BASE/bcr --repository_cache="$_MOZC_BAZEL_CACHE" --config oss_linux --config release_build $BUILD_TARGET

kill $PROXY_PID

pushd .
cd $_DOWNLOADER_CACHE
for f in `find -type f` ; do
    if [[ ! "$f" =~ "./bcr.bazel.build/" ]];then
        url="https://${f#*/}"
        echo "- type: file"
        echo "  url: $url"
        echo "  dest: bazel-deps"
        sha=`sha256sum $f|cut -f1 -d" "`
        echo "  sha256: $sha"
    fi
done > $BASE/mozc-deps.yaml
popd

yq -y -i 'sort_by(.url)' $BASE/mozc-deps.yaml

rm -rf $_MOZC_BAZEL_CACHE
rm -rf $_DOWNLOADER_CACHE

popd
$BASE/update_mozc_zip_code_patch
$BASE/update_mozc_commit
